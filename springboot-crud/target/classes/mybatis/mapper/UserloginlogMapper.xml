<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.springbootcrud.dao.UserloginlogMapper">
  <resultMap id="BaseResultMap" type="com.hao.springbootcrud.entities.Userloginlog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ipAddr" jdbcType="VARCHAR" property="ipaddr" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userName, password, create_time, ipAddr
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userloginlog
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey2" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    *
    from userloginlog
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey3" parameterType="java.lang.Integer" resultType="com.hao.springbootcrud.entities.Userloginlog">
    select
    *
    from userloginlog
    where id = #{id,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userloginlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hao.springbootcrud.entities.Userloginlog">
    insert into userloginlog (id, userName, password, 
      create_time, ipAddr)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{ipaddr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hao.springbootcrud.entities.Userloginlog">
    insert into userloginlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ipaddr != null">
        ipAddr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ipaddr != null">
        #{ipaddr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hao.springbootcrud.entities.Userloginlog">
    update userloginlog
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ipaddr != null">
        ipAddr = #{ipaddr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hao.springbootcrud.entities.Userloginlog">
    update userloginlog
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ipAddr = #{ipaddr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>